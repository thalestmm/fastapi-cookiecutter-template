services:
  {% if cookiecutter.use_celery == 'y' %}
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli ping | grep PONG"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - app-network
  
  celery_worker:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A worker worker --loglevel=info
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
  {% endif %}

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port {{ cookiecutter.backend_port }}
    ports:
      - "{{ cookiecutter.backend_port }}:{{ cookiecutter.backend_port }}"
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
    {% if cookiecutter.use_celery == 'y' %}
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    {% endif %}

volumes:
  {% if cookiecutter.use_celery == 'y' %}
  redis_data:
  rabbitmq_data:
  {% endif %}

networks:
  app-network:
    driver: bridge
